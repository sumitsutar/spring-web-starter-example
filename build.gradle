plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "pl.allegro.tech.build.axion-release" version "1.13.2"
	id "jacoco"
	id "org.sonarqube" version "3.3"
	id "com.diffplug.spotless" version "5.12.5"
}

group = 'com.github.sumitsutar.exercises'

scmVersion {
	versionCreator "versionWithBranch"
	useHighestVersion = true
	tag {
		prefix = "spring-web-starter-example"
		versionSeparator = '-'
	}
}

project.version = scmVersion.version
archivesBaseName = "spring-web-starter-example"

sourceCompatibility = 17
targetCompatibility = 17

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
repositories {
	mavenCentral()
}


jacocoTestReport {
	dependsOn test
	sourceSets sourceSets.main
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")
	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/report.xml")
		html.enabled false
		csv.enabled false
	}
}

project.tasks["sonarqube"].dependsOn jacocoTestReport

sonarqube {
	properties {
		property "sonar.projectKey", "sumitsutar_spring-web-starter-example"
		property "sonar.organization", "sumitsutar"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/report.xml"
	}
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//to test POJO classes
	testImplementation 'org.force66:BeanTester:1.0.1-rc1'

}

spotless {
	java {
		removeUnusedImports()
		trimTrailingWhitespace()
		indentWithSpaces(4)
		endWithNewline()

		replace 'Not enough space after if', 'if(', 'if ('
		replaceRegex 'Too much space after if', 'if +\\(', 'if ('

		replace 'Not enough space after for', 'for(', 'for ('
		replaceRegex 'Too much space after for', 'for +\\(', 'for ('

		replace 'Not enough space after while', 'while(', 'while ('
		replaceRegex 'Too much space after while', 'while +\\(', 'while ('
	}
}

test {
	useJUnitPlatform()
}